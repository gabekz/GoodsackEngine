#shader compute
#version 460 core

layout(local_size_x = 10, local_size_y = 10, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D imgOutput;

layout (location = 0) uniform float t; 

float rand(vec2 co)
{
    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);
}
void main()
{
    vec4 value = vec4(0.0, 0.0, 1.0, 1.0);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

    value.x = float(texelCoord.x)/(gl_NumWorkGroups.x);
    value.y = float(texelCoord.y)/(gl_NumWorkGroups.y);

    value.x = rand(vec2(value.x, t));
    value.y = rand(vec2(t, value.y));

    imageStore(imgOutput, texelCoord, value);
}
